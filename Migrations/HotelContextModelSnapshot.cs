// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using otel_advisor_webApp.Data;

#nullable disable

namespace otel_advisor_webApp.Migrations
{
    [DbContext(typeof(HotelContext))]
    partial class HotelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("otel_advisor_webApp.Models.Experience", b =>
                {
                    b.Property<int>("experience_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("experience_id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("experience_id");

                    b.ToTable("def_experience", (string)null);
                });

            modelBuilder.Entity("otel_advisor_webApp.Models.Hotel", b =>
                {
                    b.Property<int>("hotel_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("hotel_id"));

                    b.Property<int>("location_id")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("rating")
                        .HasColumnType("double precision");

                    b.HasKey("hotel_id");

                    b.HasIndex("location_id");

                    b.ToTable("def_hotel", (string)null);
                });

            modelBuilder.Entity("otel_advisor_webApp.Models.HotelExperience", b =>
                {
                    b.Property<int>("hotel_id")
                        .HasColumnType("integer");

                    b.Property<int>("experience_id")
                        .HasColumnType("integer");

                    b.Property<int>("rating")
                        .HasColumnType("integer");

                    b.HasKey("hotel_id", "experience_id");

                    b.HasIndex("experience_id");

                    b.ToTable("rel_hotel_experience", (string)null);
                });

            modelBuilder.Entity("otel_advisor_webApp.Models.Location", b =>
                {
                    b.Property<int>("location_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("location_id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("location_id");

                    b.ToTable("ref_location", (string)null);
                });

            modelBuilder.Entity("otel_advisor_webApp.Models.Reservation", b =>
                {
                    b.Property<int>("reservation_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("reservation_id"));

                    b.Property<decimal>("budget")
                        .HasColumnType("numeric");

                    b.Property<string>("exp_1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("exp_1_rating")
                        .HasColumnType("integer");

                    b.Property<string>("exp_2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("exp_2_rating")
                        .HasColumnType("integer");

                    b.Property<string>("exp_3")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("exp_3_rating")
                        .HasColumnType("integer");

                    b.Property<int?>("hotel_id")
                        .HasColumnType("integer");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("stay_duration")
                        .HasColumnType("integer");

                    b.Property<DateTime>("trip_end")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("trip_start")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("reservation_id");

                    b.HasIndex("hotel_id");

                    b.HasIndex("user_id");

                    b.ToTable("inf_reservation_request", (string)null);
                });

            modelBuilder.Entity("otel_advisor_webApp.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("user_id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("user_id");

                    b.ToTable("def_user", (string)null);
                });

            modelBuilder.Entity("otel_advisor_webApp.Models.UserPreference", b =>
                {
                    b.Property<int>("user_preference_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("user_preference_id"));

                    b.Property<int>("experience_id")
                        .HasColumnType("integer");

                    b.Property<int>("priority")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("user_preference_id");

                    b.HasIndex("experience_id");

                    b.HasIndex("user_id");

                    b.ToTable("rel_user_experience", (string)null);
                });

            modelBuilder.Entity("otel_advisor_webApp.Models.Hotel", b =>
                {
                    b.HasOne("otel_advisor_webApp.Models.Location", "Location")
                        .WithMany("Hotels")
                        .HasForeignKey("location_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("otel_advisor_webApp.Models.HotelExperience", b =>
                {
                    b.HasOne("otel_advisor_webApp.Models.Experience", "experience")
                        .WithMany("HotelExperiences")
                        .HasForeignKey("experience_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("otel_advisor_webApp.Models.Hotel", "hotel")
                        .WithMany("HotelExperiences")
                        .HasForeignKey("hotel_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("experience");

                    b.Navigation("hotel");
                });

            modelBuilder.Entity("otel_advisor_webApp.Models.Reservation", b =>
                {
                    b.HasOne("otel_advisor_webApp.Models.Hotel", null)
                        .WithMany("Reservations")
                        .HasForeignKey("hotel_id");

                    b.HasOne("otel_advisor_webApp.Models.User", "user")
                        .WithMany("Reservations")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("otel_advisor_webApp.Models.UserPreference", b =>
                {
                    b.HasOne("otel_advisor_webApp.Models.Experience", "experience")
                        .WithMany("UserPreferences")
                        .HasForeignKey("experience_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("otel_advisor_webApp.Models.User", "user")
                        .WithMany("UserPreferences")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("experience");

                    b.Navigation("user");
                });

            modelBuilder.Entity("otel_advisor_webApp.Models.Experience", b =>
                {
                    b.Navigation("HotelExperiences");

                    b.Navigation("UserPreferences");
                });

            modelBuilder.Entity("otel_advisor_webApp.Models.Hotel", b =>
                {
                    b.Navigation("HotelExperiences");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("otel_advisor_webApp.Models.Location", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("otel_advisor_webApp.Models.User", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("UserPreferences");
                });
#pragma warning restore 612, 618
        }
    }
}
